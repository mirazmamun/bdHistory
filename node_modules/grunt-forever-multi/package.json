{
  "name": "grunt-forever-multi",
  "description": "Run one or more forever scripts/actions (forked/based on grunt-forever)",
  "version": "0.4.3",
  "homepage": "https://github.com/lukemadera/grunt-forever-multi",
  "author": {
    "name": "Luke Madera",
    "url": "https://github.com/lukemadera"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:lukemadera/grunt-forever-multi.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/lukemadera/grunt-forever-multi/LICENSE.md"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "forever": ">=0.10.0"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.3.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "forever",
    "forevergrunt",
    "gruntplugin",
    "plugins",
    "daemon"
  ],
  "readme": "# grunt-forever-multi\r\n\r\nCredit to @bustardcelly and grunt-forever, which this plugin is forked from / based on. This is just that but as a multi task, with a bug or two fixed, and some added features.\r\nhttps://github.com/bustardcelly/grunt-forever\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-forever-multi --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-forever-multi');\r\n```\r\n\r\n\r\n## Forever Multi task\r\n\r\n### Usage Examples\r\nGruntfile.js\r\n```js\r\n\tforeverMulti: {\r\n\t\tbasic: {\r\n\t\t\tfile: 'test/run.js'\r\n\t\t},\r\n\t\tappServer: {\r\n\t\t\taction: 'restart',\r\n\t\t\tfile: 'test/run.js',\r\n\t\t\toptions: [\"-m '\"+cfgJson.app.name+\" port \"+cfgJson.server.port+\"'\"]\r\n\t\t},\r\n\t\ttestServer: {\r\n\t\t\t// action: 'restart',\t\t//default is restart if no action specified\r\n\t\t\tfile: 'test/run.js',\r\n\t\t\toptions: [\"config=test\", \"-m '\"+cfgTestJson.app.name+\" port \"+cfgTestJson.server.port+\"'\"]\r\n\t\t}\r\n\t}\r\n```\r\nCommand Line\r\n- command line arguments (grunt.option)\r\n\t- `action` to override the action (i.e. `--action=start` will run the forever start action even if the task config is set to `restart` or `stop` action)\r\n\r\n```js\r\n# run all tasks in this multiTask with their defaults / standard config\r\ngrunt foreverMulti\r\n# force a forever restart irregardless of what the config action is\r\ngrunt foreverMulti --action=restart\r\n# run just one of the tasks\r\ngrunt foreverMulti:appServer\r\n```\r\n\r\n### Options\r\nThe options / keys for each task mimic forever-monitor/forever: https://github.com/nodejitsu/forever-monitor including `file` and `action` keys. The only supported options currently are:\r\n- `file` The file/script to run (i.e. `index.js` or `server.js`)\r\n- `action` What to run forever with - see: https://npmjs.org/package/forever. Only `start`, `restart`, `stop` are supported currently.\r\n- `options` Command line arguments to pass to forever\r\n\r\nOther options including, but not limited to, `silent`, `uid`, `max`, `command`, `sourceDir`, `watch`, `logFile`, `outFile`, `errFile` are NOT currently supported.\r\n\r\n## Why? (Use Cases)\r\n- For Continuous Integration - to restart your server(s) after a git push/webhook to get the file changes.\r\n\t- i.e.: Use grunt to: 1. build new files/assets with the new code, 2. restart forever to update the running server/processes with the new code, 3. wait/timeout (sometimes necessary to allow the server time to fully restart), 4. run automated tests on the new code\r\n\r\n## Development\r\nSee https://npmjs.org/doc/developers.html for notes on publishing npm modules in general.\r\n- run `grunt` to ensure no issues\r\n- bump version number in `package.json`\r\n- update `CHANGELOG.md` (and potentially this `README.md`) file\r\n- `git commit` changes\r\n- `npm publish`\r\n- push to github (to update there as well)\r\n\r\n## TODO\r\n- async / forever issues intermittently.. sometimes `forever.startDaemon` is called but grunt finishes WITHOUT `done()` being called (from `this.async()`) - this causes the script to exit - sometimes before the forever process is started and it stops future execution of any other tasks in the multi-task.. I'm not sure what's going on here or how to fix..\r\n- add support for more (all?) forever options - i.e. `uid`, `command`, `watch`",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/lukemadera/grunt-forever-multi/issues"
  },
  "_id": "grunt-forever-multi@0.4.3",
  "_from": "grunt-forever-multi@~0.4.3"
}
